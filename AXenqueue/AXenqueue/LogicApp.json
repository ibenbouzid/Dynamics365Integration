{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 80,
      "metadata": {
        "description": "Name of the Logic App."
      }
    },
    "logicAppLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "[resourceGroup().location]",
        "australiaeast",
        "australiasoutheast",
        "brazilsouth",
        "centralus",
        "eastasia",
        "eastus",
        "eastus2",
        "japaneast",
        "japanwest",
        "northcentralus",
        "northeurope",
        "southcentralus",
        "southeastasia",
        "westeurope",
        "westus"
      ],
      "metadata": {
        "description": "Location of the Logic App."
      }
    }
  },
  "variables": {},
  "resources": [
    {
      "name": "[parameters('logicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('logicAppLocation')]",
      "tags": {
        "displayName": "LogicApp"
      },
      "apiVersion": "2016-06-01",
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "ComposeEnqueueURI": {
              "inputs": "@concat(triggerBody()?['baseurl'],'/api/connector/enqueue/%7B',triggerBody()?['RecuringId'],'%7D?entity=',triggerBody()?['entity'],'&company=',triggerBody()?['company'])",
              "runAfter": {
                "GetBlobFile": [
                  "Succeeded"
                ]
              },
              "type": "Compose"
            },
            "GetBlobFile": {
              "inputs": {
                "headers": {
                  "Content-Type": "text/plain"
                },
                "method": "GET",
                "uri": "@triggerBody()?['bloburl']"
              },
              "runAfter": {},
              "type": "Http"
            },
            "HTTP": {
              "inputs": {
                "authentication": {
                  "audience": "00000015-0000-0000-c000-000000000000",
                  "clientId": "@triggerBody()?['clientid']",
                  "secret": "@triggerBody()?['secret']",
                  "tenant": "@triggerBody()?['tenant']",
                  "type": "ActiveDirectoryOAuth"
                },
                "body": "@base64ToBinary(body('GetBlobFile')?['$content'])",
                "headers": {
                  "x-ms-dyn-externalidentifier": "@triggerBody()['filename']"
                },
                "method": "POST",
                "uri": "@{outputs('ComposeEnqueueURI')}"
              },
              "runAfter": {
                "ComposeEnqueueURI": [
                  "Succeeded"
                ]
              },
              "type": "Http"
            },
            "Response": {
              "inputs": {
                "body": "@body('HTTP')",
                "statusCode": "@outputs('HTTP')['statusCode']"
              },
              "kind": "Http",
              "runAfter": {
                "HTTP": [
                  "Succeeded"
                ]
              },
              "type": "Response"
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {},
          "parameters": {},
          "triggers": {
            "manual": {
              "inputs": {
                "method": "POST",
                "schema": {
                  "$schema": "http://json-schema.org/draft-06/schema#",
                  "definitions": {},
                  "id": "http://example.com/example.json",
                  "properties": {
                    "RecuringId": {
                      "id": "/properties/RecuringId",
                      "type": "string"
                    },
                    "baseurl": {
                      "id": "/properties/baseurl",
                      "type": "string"
                    },
                    "bloburl": {
                      "id": "/properties/bloburl",
                      "type": "string"
                    },
                    "clientid": {
                      "id": "/properties/clientid",
                      "type": "string"
                    },
                    "company": {
                      "id": "/properties/company",
                      "type": "string"
                    },
                    "entity": {
                      "id": "/properties/entity",
                      "type": "string"
                    },
                    "filename": {
                      "id": "/properties/filename",
                      "type": "string"
                    },
                    "secret": {
                      "id": "/properties/secret",
                      "type": "string"
                    },
                    "tenant": {
                      "id": "/properties/tenant",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "kind": "Http",
              "type": "Request"
            }
          }
        },
        "parameters": {}
      }
    }
  ],
  "outputs": {}
}